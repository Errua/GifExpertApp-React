{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","console","log","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","img","useFetchGifs","key","GifExpertApp","categories","style","width","margin","padding","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAiBhD,OACE,0BAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACK,GAAD,OAAQH,GAAR,mBAAuBG,OACrCF,EAAc,IACdM,QAAQC,IAAI,mBAMZ,2BACEC,KAAK,OACLC,MAAOV,EACPW,YAAY,sBACZC,SApBoB,SAACT,GACzBF,EAAcE,EAAEU,OAAOH,Y,uBCNdI,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DAEL,mCACVC,EAHe,iDAGiCC,UAAUH,GAH3C,6BAEL,oCAFK,SAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAChB,YAOE,MAAO,CAAEC,GADL,EALJA,GAMaC,MADT,EAJJA,MAKoBT,IADhB,EAHJU,OACEC,iBAAoBX,QAbL,kBAoBbM,GApBa,4CAAH,sDCCPM,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAEjC,OACE,yBAAKa,UAAU,0CACb,yBAAKC,IAAKd,EAAKe,IAAKN,IACpB,+BAAKA,EAAL,OCHKO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEdhB,mBAAS,CACjCuB,KAAM,GACNY,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZEC,qBAAU,WACNvB,EAAQC,GACLuB,MAAK,SAAAC,GAEFH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAIpB,CAACnB,IAECoB,EDjByBK,CAAazB,GAAhCY,EAF0B,EAEhCL,KAAcY,EAFkB,EAElBA,QAErB,OACE,oCACE,wBAAIJ,UAAU,qCAAd,IAAoDf,EAApD,KAECmB,GACC,uBAAGJ,UAAU,oCAAb,eAGF,yBAAKA,UAAU,aACZH,EAAOH,KAAI,SAACe,GAAD,OACV,kBAAC,EAAD,eAAaE,IAAKF,EAAId,IAAQc,UEOzBG,EArBM,WAAO,IAAD,EACW3C,mBAAS,CAAC,cADrB,mBAClB4C,EADkB,KACN7C,EADM,KAOzB,OACE,yBAAK8C,MAAO,CAAEC,MAAO,MAAOC,OAAQ,OAAQC,QAAS,YACnD,4CACA,kBAAC,EAAD,CAAajD,cAAeA,IAC5B,6BAEG6C,EAAWnB,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CAAS0B,IAAK1B,EAAUA,SAAUA,S,MCX5CiC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.ac9caa31.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\"); //useState(); // undefined\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((e) => [inputValue, ...e]);\r\n      setInputValue(\"\");\r\n      console.log(\"Submit hecho\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        placeholder=\"Introduce un nombre\"\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","\r\nexport const getGifs = async ( category ) => {\r\n  \r\n  const api_key = \"qZldgS1EPmPHCEmRG2ta8IGyaoBVAAKV\";\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${api_key}`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(\r\n    ({\r\n      id,\r\n      title,\r\n      images: {\r\n        downsized_medium: { url },\r\n      },\r\n    }) => {\r\n      return { id, title, url };\r\n    }\r\n  );\r\n\r\n  return (gifs);\r\n  \r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n\r\n    return (\r\n      <div className=\"card animate__animated animate__fadeIn\">\r\n        <img src={url} alt={title} />\r\n        <p> {title} </p>\r\n      </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const {data: images, loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n\r\n      {loading && (\r\n        <p className=\"animate__animated animate__flash\">Cargando...</p>\r\n      )}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n ","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n          .then(img => {\r\n              \r\n              setState({\r\n                  data: img,\r\n                  loading: false\r\n              });\r\n              \r\n            });\r\n    }, [category]);\r\n\r\n  return state;\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  // const handleAdd = () => {\r\n  //   setCategories([\"Pokemon\", ...categories]);\r\n  // };\r\n\r\n  return (\r\n    <div style={{ width: \"85%\", margin: \"auto\", padding: \"0.75rem\" }}>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}